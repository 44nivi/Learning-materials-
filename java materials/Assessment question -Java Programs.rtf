{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\colortbl ;\red255\green255\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Q #1) \highlight1 Write a Java Program to reverse a string without using String inbuilt function.\par
\highlight0\par
public class FinalReverseWithoutUsingInbuiltFunction \{\par
    public static void main(String[] args) \{\par
        String str = "Saket Saurav";\par
        char chars[] = str.toCharArray();  // converted to character array and printed in reverse order\par
        for(int i= chars.length-1; i&gt;=0; i--) \{\par
            System.out.print(chars[i]);\par
        \}\par
    \}\par
\}\par
\par
\highlight1 Write a Java Program to find whether a string or number is palindrome or not.\par
\highlight0 import java.util.Scanner;\par
 \par
public class Palindrome \{\par
    public static void main (String[] args) \{\par
        String original, reverse = "";\par
        Scanner in = new Scanner(System.in);\par
        int length;\par
        System.out.println("Enter the number or String");\par
        original = in.nextLine();\par
        length = original.length();\par
        for (int i =length -1; i>;=0; i--) \{\par
            reverse = reverse + original.charAt(i);\par
        \}\par
        System.out.println("reverse is:" +reverse);\par
         \par
        if(original.equals(reverse)) \par
            System.out.println("The number is palindrome");\par
        else\par
            System.out.println("The number is not a palindrome");\par
         \par
    \}\par
\}\par
\par
3.Write a Java Program to iterate ArrayList using for-loop, while-loop, and advance for-loop.\par
import java.util.*;\par
 \par
public class arrayList \{\par
    public static void main(String[] args) \{\par
        ArrayList list = new ArrayList();\par
        list.add("20");\par
        list.add("30");\par
        list.add("40");\par
        System.out.println(list.size());\par
        System.out.println("While Loop:");\par
        Iterator itr = list.iterator();\par
        while(itr.hasNext()) \{\par
            System.out.println(itr.next());\par
        \}\par
        System.out.println("Advanced For Loop:");\par
        for(Object obj : list) \{\par
            System.out.println(obj);\par
    \}\par
        System.out.println("For Loop:");\par
        for(int i=0; i&lt;list.size(); i++) \{\par
            System.out.println(list.get(i));\par
        \}\par
\}\par
\}\par
\par
4. \highlight1 Write a Java program to check if the given number is a prime number.\par
\highlight0 public class PrimeNumberCheck \{\par
\par
\tab public static void main(String[] args) \{\par
\tab\tab System.out.println(isPrime(19)); // true\par
\tab\tab System.out.println(isPrime(49)); // false\par
\tab\}\par
\par
\tab public static boolean isPrime(int n) \{\par
\tab\tab if (n == 0 || n == 1) \{\par
\tab\tab\tab return false;\par
\tab\tab\}\par
\tab\tab if (n == 2) \{\par
\tab\tab\tab return true;\par
\tab\tab\}\par
\tab\tab for (int i = 2; i <= n / 2; i++) \{\par
\tab\tab\tab if (n % i == 0) \{\par
\tab\tab\tab\tab return false;\par
\tab\tab\tab\}\par
\tab\tab\}\par
\par
\tab\tab return true;\par
\tab\}\par
\par
\}\par
\par
11. How do you create a deadlock scenario programmatically in Java?\par
public class ThreadDeadlock \{\par
\par
    public static void main(String[] args) throws InterruptedException \{\par
        Object obj1 = new Object();\par
        Object obj2 = new Object();\par
        Object obj3 = new Object();\par
    \par
        Thread t1 = new Thread(new SyncThread(obj1, obj2), "t1");\par
        Thread t2 = new Thread(new SyncThread(obj2, obj3), "t2");\par
        Thread t3 = new Thread(new SyncThread(obj3, obj1), "t3");\par
        \par
        t1.start();\par
        Thread.sleep(5000);\par
        t2.start();\par
        Thread.sleep(5000);\par
        t3.start();        \par
    \}\par
\par
\}\par
\par
class SyncThread implements Runnable \{\par
\par
    private Object obj1;\par
    private Object obj2;\par
\par
    public SyncThread(Object o1, Object o2) \{\par
        this.obj1 = o1;\par
        this.obj2 = o2;\par
    \}\par
\par
    @Override\par
    public void run() \{\par
        String name = Thread.currentThread().getName();\par
\par
        System.out.println(name + " acquiring lock on " + obj1);\par
        synchronized (obj1) \{\par
            System.out.println(name + " acquired lock on " + obj1);\par
            work();\par
            System.out.println(name + " acquiring lock on " + obj2);\par
            synchronized (obj2) \{\par
                System.out.println(name + " acquired lock on " + obj2);\par
                work();\par
            \}\par
            System.out.println(name + " released lock on " + obj2);\par
        \}\par
        System.out.println(name + " released lock on " + obj1);\par
        System.out.println(name + " finished execution.");\par
    \}\par
\par
    private void work() \{\par
        try \{\par
            Thread.sleep(30000);\par
        \} catch (InterruptedException e) \{\par
            e.printStackTrace();\par
        \}\par
    \}\par
\par
\}\par
\par
14. How do you implement a binary search in Java?\par
public static int binarySearch(int arr[], int low, int high, int key) \{\par
\tab int mid = (low + high) / 2;\par
\par
\tab while (low <= high) \{\par
\tab\tab if (arr[mid] < key) \{\par
\tab\tab\tab low = mid + 1;\par
\tab\tab\} else if (arr[mid] == key) \{\par
\tab\tab\tab return mid;\par
\tab\tab\} else \{\par
\tab\tab\tab high = mid - 1;\par
\tab\tab\}\par
\tab\tab mid = (low + high) / 2;\par
\tab\}\par
\par
\tab if (low > high) \{\par
\tab\tab return -1;\par
\tab\}\par
\par
\tab return -1;\par
\}\par
\par
\par
19. \highlight1 How do you find the second largest number in an array in Java?\par
\highlight0 private static int findSecondHighest(int[] array) \{\par
\tab int highest = Integer.MIN_VALUE;\par
\tab int secondHighest = Integer.MIN_VALUE;\par
\par
\tab for (int i : array) \{\par
\tab\tab if (i > highest) \{\par
\tab\tab\tab secondHighest = highest;\par
\tab\tab\tab highest = i;\par
\tab\tab\} else if (i > secondHighest) \{\par
\tab\tab\tab secondHighest = i;\par
\tab\tab\}\par
\par
\tab\}\par
\tab return secondHighest;\par
\}\par
\par
7.\highlight1 write a java program to print the Left Triangle Star Pattern\par
\par
           * \par
         * * \par
       * * * \par
     * * * * \par
   * * * * *\par
\highlight0\par
public class Edureka \par
\{ \par
    public static void printStars(int n) \par
    \{ \par
        int i, j;  \par
        for(i=0; i<n; i++) //outer loop for number of rows(n) \{ for(j=2*(n-i); j>=0; j--) // inner loop for spaces \par
            \{           \par
                System.out.print(" "); // printing space\par
            \} \par
            for(j=0; j<=i; j++) //  inner loop for columns\par
            \{       \par
                System.out.print("* "); // print star\par
            \}           \par
            System.out.println(); // ending line after each row\par
        \} \par
    \} \par
    public static void main(String args[]) \par
    \{ \par
        int n = 5; \par
        printStars(n); \par
    \} \par
\}\par
\par
8.\highlight1 write a java program to print the given pattern \par
Diamond Numeric Pattern\par
 \par
1 2 3 4 5 \par
 2 3 4 5 \par
  3 4 5 \par
   4 5 \par
    5 \par
\highlight0\par
import java.util.Scanner;\par
public class Edureka\par
\{\par
    public static void main(String[] args) \par
    \{\par
          \par
        int n = 5;  \par
          \par
        for (int i = 1; i <= n; i++) \par
        \{\par
            for (int j = 1; j < i; j++) \par
            \{\par
                System.out.print(" ");\par
            \}\par
              \par
            for (int k = i; k <= n; k++) \par
\tab\tab\{ System.out.print(k+" "); \par
\tab\tab\tab\} \par
\tab\tab System.out.println(); \par
\tab      \}\par
\par
9.\highlight1 Write a program in Java to read three integers and display them in descending order.\par
\highlight0 import java.util.Scanner;\par
\par
public class KboatDescending\par
\{\par
    public static void main(String args[]) \{\par
        Scanner in = new Scanner(System.in);\par
        System.out.print("Enter first number: ");\par
        int a = in.nextInt();\par
        System.out.print("Enter second number: ");\par
        int b = in.nextInt();\par
        System.out.print("Enter third number: ");\par
        int c = in.nextInt();\par
\par
        int max = -1, mid = -1, min = -1;\par
        if (a > b) \{\par
            if (a > c) \{\par
                max = a;\par
                if (b > c) \{\par
                    mid = b;\par
                    min = c;\par
                \}\par
                else \{\par
                    mid = c;\par
                    min = b;\par
                \}\par
            \}\par
            else \{\par
                max = c;\par
                mid = a;\par
                min = b;\par
            \}\par
        \}\par
        else \{\par
            if (b > c) \{\par
                max = b;\par
                if (a > c) \{\par
                    mid = a;\par
                    min = c;\par
                \}\par
                else \{\par
                    \{\par
                        mid = c;\par
                        min = a;\par
                    \}\par
                \}\par
            \}\par
            else \{\par
                max = c;\par
                mid = b;\par
                min = a;\par
            \}\par
        \}\par
        \par
        System.out.println("Numbers in Descending order:");\par
        System.out.println(max + " " + mid + " " + min);\par
    \}\par
\}\par
\par
\highlight1 write a program to find grade of a student using switch case \par
\par
number in marks \tab\tab grade conversion \par
90-100\tab\tab\tab\tab\tab A\par
80-89\tab\tab\tab\tab\tab B\par
70-79\tab\tab\tab\tab\tab C\par
60-69\tab\tab\tab\tab\tab D\par
50-59\tab\tab\tab\tab\tab E\par
below 50 \tab\tab\tab\tab Fail \par
\highlight0\par
\highlight1 write a program for a constructor overloading in java \par
\highlight0 package com.journaldev.constructor;\par
\par
public class Data \{\par
\par
\tab private String name;\par
\tab private int id;\par
\par
\tab //no-args constructor\par
\tab public Data() \{\par
\tab\tab this.name = "Default Name";\par
\tab\}\par
\tab //one parameter constructor\par
\tab public Data(String n) \{\par
\tab\tab this.name = n;\par
\tab\}\par
\tab //two parameter constructor\par
\tab public Data(String n, int i) \{\par
\tab\tab this.name = n;\par
\tab\tab this.id = i;\par
\tab\}\par
\par
\tab public String getName() \{\par
\tab\tab return name;\par
\tab\}\par
\par
\tab public int getId() \{\par
\tab\tab return id;\par
\tab\}\par
\par
\tab @Override\par
\tab public String toString() \{\par
\tab\tab return "ID="+id+", Name="+name;\par
\tab\}\par
\tab public static void main(String[] args) \{\par
\tab\tab Data d = new Data();\par
\tab\tab System.out.println(d);\par
\tab\tab\par
\tab\tab d = new Data("Java");\par
\tab\tab System.out.println(d);\par
\tab\tab\par
\tab\tab d = new Data("Pankaj", 25);\par
\tab\tab System.out.println(d);\par
\tab\tab\par
\tab\}\par
\par
\}\par
\par
\par
11.\highlight1 Design a class named ShowRoom with the following description:\par
\par
Instance variables/data members:\par
\par
String name: to store the name of the customer.\par
long mobno: to store the mobile number of the customer.\par
double cost: to store the cost of the items purchased.\par
double dis: to store the discount amount.\par
double amount: to store the amount to be paid after discount.\par
\par
Member methods:\par
\par
ShowRoom(): default constructor to initialize data members.\par
void input(): to input customer name, mobile number, cost.\par
void calculate(): to calculate discount on the cost of purchased items, based on the following criteria:\par
\par
COST                                                      DISCOUNT (IN PERCENTAGE)\par
\par
Less than or equal to Rs. 10000                           5%\par
More than Rs. 10000 and less than or equal to Rs. 20000   10%\par
More than Rs. 20000 and less than or equal to Rs. 35000   15%\par
More than Rs. 35000                                       20%\par
\par
void display(): to display customer name, mobile number, amount to be paid after discount.\par
Write a main() method to create an object of the class and call the above member methods.\par
\highlight0\par
import java.util.Scanner;\par
class ShowRoom\{\par
  //as mentioned in the question\par
     String name;\par
     long mobno;\par
     double cost;\par
     double dis;\par
     double amount;\par
    public ShowRoom()\{\par
        name = "";\par
        mobno = 0l;\par
        cost = 0.0;\par
        dis = 0.0;\par
        amount = 0.0;\par
    \}\par
    public void input()\{\par
       Scanner sc = new Scanner(System.in);\par
        System.out.print("Please enter Customer name: ");\par
        name = sc.nextLine();\par
        System.out.print("Please enter Mobile Number: ");\par
        mobno = sc.nextLong();\par
        System.out.print("Please enter Cost: ");\par
        cost = sc.nextDouble();\par
    \}\par
    public void calculate()\{\par
        if(cost <= 10000)\par
            dis = 5.0/100.0 *cost;\par
        else if(cost <= 20000)\par
            dis = 10.0/100.0*cost;\par
        else if(cost <= 35000)\par
            dis = 15.0/100.0 *cost;\par
        else\par
        dis = 20.0 / 100.0 * cost;\par
        amount = cost - dis;\par
    \}\par
    public void display()\{\par
        System.out.println("Customer name is: " + name);\par
        System.out.println("Mobile Number is: " + mobno);\par
        System.out.println("Total Amount is: " + amount);\par
    \}\par
    public static void main(String args[])\{\par
        ShowRoom obj = new ShowRoom();\par
        obj.input();\par
        obj.calculate();\par
        obj.display();\par
    \}\par
\}\par
\par
          \par
12\highlight1 . write a java program to Design a class to overload a function series() as follows:\par
\par
(a) void series(int x, int n): to display the sum of the series given below:\par
x1 + x2 + x3 + \'85 + xn terms\par
\par
(b) void series(int p): to display the following series:\par
0, 7, 26, 63, \'85 p terms.\par
\par
(c) void series(): to display the sum of the series given below:\par
1/2 + 1/3 + 1/4 + \'85 + 1/10.\par
\highlight0\par
\par
\par
class Overload2019\par
    \{\par
    public void series(int x, int n)\{\par
        double sum = 0L;\par
        for(int i = 1; i <= n; i++)\par
        \{\par
            sum=sum+Math.pow(x, i);\par
        \}\par
        System.out.println("Sum of series is " + sum);\par
    \}\par
    public void series(int p)\par
    \{\par
        int term=0;\par
        for(int i = 1; i <= p; i++)\par
        \{\par
            term = (int)(Math.pow(i, 3)-1);\par
            System.out.print(term + ",");\par
        \}\par
    \}\par
    public void series()\par
    \{\par
        double sum = 0.0;\par
        for(int i = 2; i <= 10; i++)\par
            sum = sum+ 1.0 / i;\par
        System.out.println("Sum of series is " + sum);\par
    \}\par
    // main function to run this program \par
    public static void main(String args[])\par
    \{\par
      Overload2019 ob = new Overload2019();\par
      ob.series(2,4);\par
      ob.series(3);\par
      ob.series();  \par
    \} \par
  \par
\}\par
\par
14.\highlight1 Write a program to accept name and total marks of N number of \par
students in two single subscripts array name[] and totalmarks[].\par
\par
Calculate and print:\par
(i) The average of the total marks obtained by N number of students.\par
[average = (sum of total marks of all the students) / N]\par
(ii) Deviation of each student\rquote s total marks with the average.\par
[deviation = total marks of a student \f1\endash  average].\par
\par
\highlight0\par
import java.util.Scanner;\par
class Array2018\par
\{\par
    public static void main(String args[])\par
    \{\par
        Scanner sc = new Scanner(System.in);\par
        System.out.print("Please enter Number of students: ");\par
        int n = sc.nextInt();\par
        sc.nextLine(); // Consuming the left over line after integer in Scanner\par
        String name[] = new String[n];\par
        int totalmarks[] = new int[n];\par
        int sum=0;\par
        double avg = 0.0;\par
        double dev = 0.0;\par
        for(int i = 0; i < n; i++)\{\par
            System.out.print("Please enter Name: ");\par
            name[i] = sc.nextLine();\par
            System.out.print("Please enter Marks: ");\par
            totalmarks[i] = sc.nextInt();\par
            sc.nextLine(); // Consuming the left over line after integer in Scanner\par
            sum += totalmarks[i];\par
        \}\par
        avg = (double)sum / n;\par
        for(int i = 0; i < n; i++)\{\par
            dev = totalmarks[i] - avg;\par
            System.out.println("Deviation for student " + name[i] + ": " + dev);\par
        \}\par
        System.out.println("Average score: " + avg);\par
    \}\par
\}\par
\par
\par
\highlight1 Write a program to assign a full path and file name as given below. \par
Using library functions, extract and output the file path, file name \par
and file extension separately as shown.\par
\par
INPUT: C:\\Users\\admin\\Pictures\\flower.jpg\par
OUTPUT:\par
Path: C:\\Users\\admin\\Pictures\\\par
File name: flower\par
Extension: jpg\par
\highlight0\par
import java.util.Scanner;\par
\par
class Other2014\par
\{\par
    public static void main(String args[])\par
    \{\par
        Scanner sc = new Scanner(System.in);\par
        System.out.println("Enter any full path");\par
        String Fullpath = sc.nextLine();\par
\par
        int lastSlash = Fullpath.lastIndexOf('\\\\');\par
        int dot = Fullpath.lastIndexOf('.');\par
         \par
        \par
        System.out.println("Path: " + Fullpath.substring(0, lastSlash + 1));\par
        System.out.println("File name: " + Fullpath.substring(lastSlash + 1,dot));\par
        System.out.println("Extension: " + Fullpath.substring(dot+1));\par
    \}\par
\}\par
\par
18.\highlight1 write a program to create a super class Shapes and create a sub classess like rectangle ,triangle and circle to implement the polymorphism\highlight0 .\par
class Shapes \{\par
  public void area() \{\par
    System.out.println("The formula for area of ");\par
  \}\par
\}\par
class Triangle extends Shapes \{\par
  public void area() \{\par
    System.out.println("Triangle is \f0\'bd * base * height ");\par
  \}\par
\}\par
class Circle extends Shapes \{\par
  public void area() \{\par
    System.out.println("Circle is 3.14 * radius * radius ");\par
  \}\par
\}\par
class Main \{\par
  public static void main(String[] args) \{\par
    Shapes myShape = new Shapes();  // Create a Shapes object\par
    Shapes myTriangle = new Triangle();  // Create a Triangle object\par
    Shapes myCircle = new Circle();  // Create a Circle object\par
    myShape.area();\par
    myTriangle.area();\par
    myShape.area();\par
    myCircle.area();\par
  \}\par
\}\par
\par
19. \highlight1 write a program to override the class Bird to another class like eagle,sparrow,duck to implement its features .\highlight0\par
\par
20.\highlight1 Write a Java program that throws an exception and catch it using a try-catch block.\par
\highlight0\par
public class Exception_Example \{\par
  public static void main(String[] args) \{\par
    try \{\par
      int result = divideNumbers(5, 0);\par
      System.out.println("Result: " + result);\par
    \} catch (ArithmeticException e) \{\par
      System.out.println("Error: " + e.getMessage());\par
    \}\par
  \}\par
  public static int divideNumbers(int dividend, int divisor) \{\par
    if (divisor == 0) \{\par
      throw new ArithmeticException("Cannot divide the given number by zero!");\par
    \}\par
    return dividend / divisor;\par
  \}\par
\}\par
 \par
21.\highlight1 Write a Java program to create a method that takes a string as input and throws an exception if the string does not contain vowels.\par
\highlight0 public class Vowel_Check \{\par
  public static void main(String[] args) \{\par
    try \{\par
      String text = "Java handling and managing exceptions ";\par
      // String text = "Typy gyps fly.";\par
      System.out.println("Original string: " + text);\par
      checkVowels(text);\par
      System.out.println("String contains vowels.");\par
    \} catch (NoVowelsException e) \{\par
      System.out.println("Error: " + e.getMessage());\par
    \}\par
  \}\par
\par
  public static void checkVowels(String text) throws NoVowelsException \{\par
    boolean containsVowels = false;\par
    String vowels = "aeiouAEIOU";\par
\par
    for (int i = 0; i < text.length(); i++) \{\par
      char ch = text.charAt(i);\par
      if (vowels.contains(String.valueOf(ch))) \{\par
        containsVowels = true;\par
        break;\par
      \}\par
    \}\par
    if (!containsVowels) \{\par
      throw new NoVowelsException("String does not contain any vowels.");\par
    \}\par
  \}\par
\}\par
class NoVowelsException extends Exception \{\par
  public NoVowelsException(String message) \{\par
    super(message);\par
  \}\par
\}\par
\par
\par
\par
}
 